{
  "name": "vision79-siwm-frontend",
  "private": true,
  "version": "1.0.0",
  "type": "module",
  "scripts": {
    "dev:frontend": "vite --host",
    "dev:backend": "cd backend && npm run dev",
    "dev": "concurrently --names \"FRONTEND,BACKEND\" -c \"bgBlue.bold,bgGreen.bold\" \"npm:dev:frontend\" \"npm:dev:backend\"",
    "dev:clean": "rm -rf node_modules/.vite && npm run dev:frontend",
    "dev:http": "vite --host --port 3000",
    "generate-ssl": "node generate-ssl.js",
    "build": "tsc && vite build",
    "build:production": "NODE_ENV=production npm run build",
    "preview": "vite preview",
    "start:production": "npm run build:production && npm run preview",
    "lint": "eslint . --ext ts,tsx --report-unused-disable-directives --max-warnings 0",
    "lint:fix": "eslint . --ext ts,tsx --fix",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "test:e2e": "cypress run",
    "test:e2e:open": "cypress open",
    "test:playwright": "playwright test",
    "test:playwright:ui": "playwright test --ui",
    "test:accessibility": "lighthouse http://localhost:5173 --output=json --output-path=./lighthouse-report.json",
    "test:security": "npm run test:security:audit && npm run test:security:owasp",
    "test:security:audit": "npm audit --audit-level=high",
    "test:security:owasp": "echo 'OWASP ZAP security testing would run here in production'",
    "build:prod": "npm run lint && npm run test && npm run build",
    "deploy:check": "npm run build:prod && npm run test:e2e",
    "analyze": "vite build --mode analyze",
    "type-check": "tsc --noEmit"
  },
  "dependencies": {
    "@heroicons/react": "^2.1.3",
    "@hookform/resolvers": "^3.6.0",
    "bcryptjs": "^3.0.2",
    "chart.js": "^4.5.0",
    "dotenv": "^17.1.0",
    "eslint-plugin-security": "^3.0.1",
    "exceljs": "^4.4.0",
    "express": "^5.1.0",
    "express-http-proxy": "^2.1.1",
    "express-rate-limit": "^7.5.1",
    "focus-trap-react": "^10.2.3",
    "helmet": "^8.1.0",
    "helmet-csp": "^4.0.0",
    "jspdf": "^3.0.1",
    "jspdf-autotable": "^5.0.2",
    "multer": "^2.0.1",
    "node-cache": "^5.1.2",
    "node-fetch": "^3.3.2",
    "node-pg-migrate": "^8.0.3",
    "nodemailer": "^7.0.5",
    "papaparse": "^5.5.3",
    "react": "^18.3.1",
    "react-chartjs-2": "^5.3.0",
    "react-dom": "^18.3.1",
    "react-hook-form": "^7.51.5",
    "react-router-dom": "^6.23.1",
    "recharts": "^2.12.7",
    "redis": "^5.6.0",
    "supertest": "^7.1.3",
    "winston-daily-rotate-file": "^5.0.0",
    "xlsx": "^0.18.5",
    "zod": "^3.23.8"
  },
  "devDependencies": {
    "@playwright/test": "^1.42.1",
    "@testing-library/jest-dom": "^6.4.2",
    "@testing-library/react": "^14.2.1",
    "@testing-library/user-event": "^14.5.2",
    "@types/jest": "^29.5.14",
    "@types/node": "^20.12.12",
    "@types/papaparse": "^5.3.14",
    "@types/react": "^18.3.3",
    "@types/react-dom": "^18.3.0",
    "@types/testing-library__jest-dom": "^5.14.9",
    "@typescript-eslint/eslint-plugin": "^7.2.0",
    "@typescript-eslint/parser": "^7.2.0",
    "@vitejs/plugin-react": "^4.3.0",
    "autoprefixer": "^10.4.19",
    "concurrently": "^8.2.2",
    "cypress": "^13.6.6",
    "eslint": "^8.57.1",
    "eslint-plugin-import": "^2.29.1",
    "eslint-plugin-jsx-a11y": "^6.8.0",
    "eslint-plugin-prettier": "^5.1.3",
    "eslint-plugin-react": "^7.34.0",
    "eslint-plugin-react-hooks": "^4.6.0",
    "husky": "^9.0.11",
    "jest": "^30.0.4",
    "jest-environment-jsdom": "^29.7.0",
    "lighthouse": "^12.7.1",
    "lint-staged": "^16.1.2",
    "postcss": "^8.4.38",
    "prettier": "^3.2.5",
    "tailwindcss": "^3.4.3",
    "ts-jest": "^29.4.0",
    "typescript": "^5.4.5",
    "vite": "^7.0.2"
  },
  "jest": {
    "preset": "ts-jest",
    "testEnvironment": "jsdom",
    "setupFilesAfterEnv": [
      "<rootDir>/src/setupTests.ts"
    ],
    "moduleNameMapper": {
      "^@/(.*)$": "<rootDir>/src/$1"
    },
    "collectCoverageFrom": [
      "src/**/*.{ts,tsx}",
      "!src/**/*.d.ts",
      "!src/main.tsx",
      "!src/index.tsx"
    ],
    "coverageThreshold": {
      "global": {
        "branches": 80,
        "functions": 80,
        "lines": 80,
        "statements": 80
      }
    }
  },
  "lint-staged": {
    "*.{ts,tsx}": [
      "eslint --fix",
      "prettier --write"
    ]
  }
}
